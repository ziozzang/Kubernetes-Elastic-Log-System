apiVersion: v1
kind: Namespace
metadata:
  name: kube-elk
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: es-config
  namespace: kube-elk
data:
  # Check ES Node config from https://www.elastic.co/guide/en/elasticsearch/reference/current/settings.html
  elasticsearch.yml: |
    cluster.name: es-backend
    node.name: ${NODE_NAME}
    network.host: "0.0.0.0"
    bootstrap.memory_lock: false
    discovery.zen.ping.unicast.hosts: cluster
    discovery.zen.minimum_master_nodes: 1
    xpack.security.enabled: false
    xpack.monitoring.enabled: false
  ES_JAVA_OPTS: -Xms512m -Xmx512m
#"-Xms512m -Xmx512m"
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  namespace: kube-elk
  name: elastic-cluster
  labels:
    component: elasticsearch

spec:
  serviceName: elasticsearch
  replicas: 3                      #Required number of replicas

  updateStrategy:
    type: RollingUpdate

  template:
    metadata:
      labels:
        component: elasticsearch
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                # Specific Host will be ES-Nodes.
                - host-10-1-2-71
                - host-10-1-2-72
                - host-10-1-2-73
      securityContext:
        fsGroup: 1000
      initContainers: #will always initialize before other containers
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        #resources:
        #    requests:
        #        memory: 1Gi
        securityContext:
          privileged: true
          runAsUser: 1000
          capabilities:
            add:
            - IPC_LOCK
            - SYS_RESOURCE
        env:
        #- name: discovery.type
        #  value: single-node
        - name: ES_JAVA_OPTS
          valueFrom:
              configMapKeyRef:
                  name: es-config
                  key: ES_JAVA_OPTS
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: docker.elastic.co/elasticsearch/elasticsearch:6.6.0
        # Image Tag Version => https://www.docker.elastic.co/
        #imagePullPolicy: Always
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /_cluster/health?local=true
            port: 9200
          initialDelaySeconds: 5
        volumeMounts:
        - name: vl-es-data
          mountPath: "/usr/share/elasticsearch/data"
        - name: vl-es-config
          mountPath: /usr/share/elasticsearch/config/elasticsearch.yml
          subPath: elasticsearch.yml
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
      volumes:
      - name: vl-es-config
        configMap:
          name: es-config
          items:
          - key: elasticsearch.yml
            path: elasticsearch.yml
      - name: vl-es-data
        hostPath:
          # ES data will store at Local DISK!
          path: "/opt/elastic"
          type: DirectoryOrCreate

---
# For Clustering Find.
apiVersion: v1
kind: Service
metadata:
  name: cluster
  namespace: kube-elk
spec:
  clusterIP: None
  selector:
    component: elasticsearch
  ports:
  - name: transport
    port: 9300
---
# For Serving
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch-client
  namespace: kube-elk
  #labels:
  #  component: elasticsearch
spec:
  type: LoadBalancer
  selector:
    component: elasticsearch
  ports:
  - name: http
    port: 9200
    protocol: TCP
---
# You can check cluster health with this URL
# > http://elasticsearch-client.kube-elk:9200/_cluster/health?pretty
